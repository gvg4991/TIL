work------------------------------------------------------------------------------------------------------------------------

window+r  ->  \\14.46.141.236
zzu.li/sgmpy

scratch--------------------------------------------------------------------------------------------------------------------

typora---------------------------------------------------------------------------------------------------------------------

## :제목설정
- :앞에 쩜
``:(엔틱) 코딩
``` + enter: 전문코딩
> :인용문
--- + enter: 한줄 긋기
단어[^1] [1^]: 주석 달기
![이미지 이름 아무거나](이미지 주소): 이미지 넣기

git bash---------------------------------------------------------------------------------------------------------------------

cd: 접근
ls: 하위폴더
mkdir 폴더명/: 폴더만들기
mv 이동폴더/ 이동장소/
ㆍ창 삭제?
clear

git---------------------------------------------------------------------------------------------------------------------------

git file 확인하기

jupyter----------------------------------------------------------------------------------------------------------------------

ㆍmaterials 강의자료 업로드
cd materials -> git pull
ㆍ시작
jupyter notebook
>> http://localhost:8888/?token=28550aded68778b4392c20e17a13d69e93ca454a0150e203
ㆍ코드실행
shift+enter로 실행
alt+enter로 실행 후 앞 부분 수정
ctrl+enter로 그자리에서 실행가능!!!!
esc 커서 사라지고 방향키로 셀 이동 가능 -> enter로 수정
ㆍh로 단축기확인 가능
z로 복원(ctrl+z 아님!)
ㆍ부가 기능
ln[숫자]: 숫자에 넣는 순서대로 실행 (kernel - restart&clear output로 순서 초기화)
화살표로 셀위치 수정 가능
code, 마크다운 등 으로 설정가능
ctrl 방향키: 위(젤앞) 아래(젤뒤) 왼(단어앞) 오(단어뒤)

python----------------------------------------------------------------------------------------------------------------------

ㆍ주석
- 주석: #, 전체 주석: ctrl + /, 여러줄 주석(doc): ''' '''
- .__doc__로 ''' '''안의 다큐멘트를 확인할 수 있음

ㆍ코딩작성
- 여러줄을 이어지게 코딩하고 싶을때 끝지점에서 \작성후 줄바꾸고 이어서 적음

ㆍprint
- print에 따옴표를 넣으려면 시작과 안의 따옴표를 다르게하기 '..."~"...' or "...'~'..."
- \n은 줄바꿈, \t는 탭, end='\...'설정으로 두 print간의 설정 가능
- 그외의 \다음 문자는 문자 그대로 표현해줌 ex) print('\\')는 \ 

ㆍ변수
- 변수 = 값
- 리스트 = [값, ...]
- 딕셔너리 = {"키":벨류, ...}

ㆍ연산
- //:몫, %:나머지, **:거듭제곱
- !=: 같지않다

ㆍif문
- if 조건:
  elif 조건:
	참결과
  else:
	거짓결과
- 참결과 if 조건 else 거짓결과 (if문 한줄로 작성)

ㆍwhile문
- while 조건:
	결과값
	종료조건

ㆍfor문
- for 변수 in 데이터:

C9----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍide.c9.io
ㆍpyenv global 3.6.7로 이용 버전 설정
ㆍ터미널 새로 설정: exec $SHELL
ㆍFALSK 설치
 - 설정: FLASK_APP=app.py flask run --host=$IP --port=$PORT
ㆍprintenv -> source ~/.bash_profile
ㆍrequests.get (get은 주소창에 입력받음, post는 )

flask-------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍ터미널에서 ctrl+c로 나간후 실행: FLASK_APP=hello.py flask run
ㆍ추가 창(.../어쩌고)
@app.route("/ssafy")
def ssafy():
    return "This is SSAFY:)"
ㆍ추가창에 인풋데이터 참고<int / string : 변수이름>
@app.route("/cube.<int:num>")                                #<int:num> : 입력값
def cube(num):
    cube=num**3 # == num*num*num
    return str(cube)
    return f'{num}의 세제곱은 {cube}입니다.'

telegram---------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍtoken: 784700304:AAFl1zcLZDv4JRWjaTl-mAzReT8fJl8kMuA
ㆍuser ID: 718060199
ㆍ기능: https://core.telegram.org/bots/api#sendmessage - available methods - ...
ㆍmaking requests: https://api.telegram.org/bot784700304:AAFl1zcLZDv4JRWjaTl-mAzReT8fJl8kMuA/METHOD_NAME

html------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍhtml:5
ㆍbody 영역을 직접 눈으로 보게됨
 -h숫자: 헤드 텍스트 입력
 -p: 본문영역 텍스트 입력
 -<br>: 강제 줄바꿈
 -ul: (ㆍ) 으로 리스트 구분, ol: 숫자로 리스트 구분
 -li: 리스트 만듬
ㆍ참조
# : 아이디 참조 (#id명 - 전체에서 딱 하나만 가능)
. : 클래스 참조, 현재 폴더 (.class명)
ㆍ주석: ctrl + /
ㆍ<style>: 인라인, 아이디, 클래스, 태그 순으로 수식 우선순위 - 뒤에 적힌게 우선순위
  -<style>
    h1{
        color: palevioletred;
    }
</style>
ㆍimg: ./로 현재 폴더 이미지 불러올 수 있음



```