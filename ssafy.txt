work------------------------------------------------------------------------------------------------------------------------

window+r  ->  \\14.46.141.236
zzu.li/sgmpy

scratch--------------------------------------------------------------------------------------------------------------------

typora---------------------------------------------------------------------------------------------------------------------

## :제목설정
- :앞에 쩜
``:(엔틱) 코딩
``` + enter: 전문코딩
> :인용문
--- + enter: 한줄 긋기
단어[^1] [1^]: 주석 달기
![이미지 이름 아무거나](이미지 주소): 이미지 넣기

git bash---------------------------------------------------------------------------------------------------------------------

cd: 접근
ls: 하위폴더
mkdir 폴더명/: 폴더만들기
mv 이동폴더/ 이동장소/
ㆍ창 삭제?
clear

git---------------------------------------------------------------------------------------------------------------------------

git file 확인하기

jupyter----------------------------------------------------------------------------------------------------------------------

ㆍmaterials 강의자료 업로드
cd materials -> git pull
ㆍ시작
jupyter notebook
>> http://localhost:8888/?token=28550aded68778b4392c20e17a13d69e93ca454a0150e203
ㆍ코드실행
shift+enter로 실행
alt+enter로 실행 후 앞 부분 수정
ctrl+enter로 그자리에서 실행가능!!!!
esc 커서 사라지고 방향키로 셀 이동 가능 -> enter로 수정
ㆍh로 단축기확인 가능
z로 복원(ctrl+z 아님!)
ㆍ부가 기능
ln[숫자]: 숫자에 넣는 순서대로 실행 (kernel - restart&clear output로 순서 초기화)
화살표로 셀위치 수정 가능
code, 마크다운 등 으로 설정가능
ctrl 방향키: 위(젤앞) 아래(젤뒤) 왼(단어앞) 오(단어뒤)

python----------------------------------------------------------------------------------------------------------------------

ㆍ주석
- 주석: #, 전체 주석: ctrl + /, 여러줄 주석(doc): ''' '''
- .__doc__로 ''' '''안의 다큐멘트를 확인할 수 있음

ㆍ코딩작성
- 여러줄을 이어지게 코딩하고 싶을때 끝지점에서 \작성후 줄바꾸고 이어서 적음

ㆍprint
- print에 따옴표를 넣으려면 시작과 안의 따옴표를 다르게하기 '..."~"...' or "...'~'..."
- \n은 줄바꿈, \t는 탭, end='\...'설정으로 두 print간의 설정 가능
- 그외의 \다음 문자는 문자 그대로 표현해줌 ex) print('\\')는 \ 

ㆍ변수
- 변수 = 값
- 리스트 = [값, ...]
- 딕셔너리 = {"키":벨류, ...}

ㆍ연산
- //:몫, %:나머지, **:거듭제곱
- !=: 같지않다

ㆍif문
- if 조건:
  elif 조건:
	참결과
  else:
	거짓결과
- 참결과 if 조건 else 거짓결과 (if문 한줄로 작성)

ㆍwhile문
- while 조건:
	결과값
	종료조건

ㆍfor문
- for 변수 in 데이터:

ㆍlist comprehension!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
a_list=[(n,m) for n in girls for m in boys] #for문을 list안에서 옆으로 쭉 나열하면 됨
print(a_list)

ㆍlist복사
a=[1,2,3]
b=a[:] 아니면 b=list(a) #이렇게 복사해야 b를 바꿔도 a가 바뀌지 않음

ㆍfrom random import choice -> choice
   = import random -> random.choice

ㆍ if __name__ == '__main__':
- 메인에서만 실행(def 함수를 지정 후 다른페이지에서 그 함수를 불러올 때 실행x)

C9----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍide.c9.io
ㆍpyenv global 3.6.7로 이용 버전 설정
ㆍ터미널 새로 설정: exec $SHELL
ㆍFALSK 설치
 - 설정: FLASK_APP=app.py flask run --host=$IP --port=$PORT
ㆍprintenv -> source ~/.bash_profile
ㆍrequests.get (get은 주소창에 입력받음, post는 )

flask-------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍintro
- 어떻게 사용할 수 있는지 사용 형식에 대해 공부
- web에서 커뮤니케이션 방법은 요청(클라이언트->서버)과 응답(서버->클라이언트): 웹서비스
- 요청(사람이 요청: get:받다, post:보내다) / 응답(프로그램이 처리)
- HTML을 요청하면 HTML을 응답

ㆍweb
- IP주소: 172.217.27.78 구글 주소(google.com 주소 이름)
- url은 네트워크 상에서 자원이 어딨는지 알려주기 위한 고유 규약(주소 뿐만 아니라 자원을 모두 나타냄)
- static web: 그 자리에 있는 파일만 가지고와서 읽음(정적 웹)
- dynamic web: 어떠한 값을 넣으면 연산된 값까지 받을 수 있음

ㆍHTML(파일명.htm)
- Hyper Text Markup Language(마크업 언어)
- 처음부터 쭉 읽는 선형적인 텍스트가 아니고 키워드에 따라 이동 가능한 비선형적 텍스트
- web 페이지를 작성하기위한 역할 언어
- HTML:5 + tab
	<!DOCTYPE html>: doc type 선언부
	<그외 나머지 파트>: html 요소
		head요소: 문서 제목, 문자코드와 같이 해당 문서정보를 담음(브라우저에 나타나지x)
		body요소: 브라우저 화면에 나타나는 요소

ㆍ실행
- flask 처음 실행, http://flask.pocoo.org/
- 설치: VScode 터미널에서 pip install Flask
- 서버 종료: 터미널에서 ctrl+c로
- 실행: FLASK_APP=hello.py flask run
- 자동 서버 재시작 설정: FLASK_DBUG=1 FLASK_APP=hello.py flask run (서버 종료-실행 반복과정 제거)

ㆍ추가 창(.../어쩌고)
@app.route("/ssafy")
def ssafy():
    return "This is SSAFY:)"

ㆍ추가창에 인풋데이터 참고<형식 : 변수이름>
- 형식: int, string, float, pass의 input값 형식을 지정
@app.route("/cube.<int:num>")                                #<int:num> : 입력값
def cube(num):   #()안에 input으로 넣는 변수이름을 꼭 넣어야됨!
    cube=num**3 # == num*num*num
    return str(cube)
    return f'{num}의 세제곱은 {cube}입니다.'

html------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍchrome에서 확인하는 방법
- http://html5test.com/: 브라우저 점수 확인 (chrome사용)
- 사이트별 아웃라인 보기: 확장프로그램 - 햄버거 메뉴버튼 - chrome 웹스토어 열기 - web developer - information - view document outline 으로 확인

ㆍ기본 기능
- 주석 처리: <!-- -->, ctrl+/
- 자동완성: tab
- 강제 줄바꿈: <br>

ㆍhtml:5 + tab
- head영역은 브라우저에 나타나지 않음, body 영역은 직접 눈으로 보게됨
- <title>: 탭이름 설정</title>
- <h숫자>: 헤드 텍스트 입력, 제목 (<h1>여는 태그, </h1>닫는 태그)
- p: 본문영역 텍스트 입력

ㆍbody 태그
- <body>부모와 <ul>, <li>...등은 자식 관계

ㆍ스타일 지정
- <style> h1 { color:blue;} </style>: 세미콜론 들어감
- <b>: 굵은 글씨 지정 (시맨틱 태그 <strong>을 더 선호)
- <i>: 기울인 글씨 직정 (시맨틱 태그 <em>을 더 선호)
- <mark>: 형광팬
- <del>: 제거줄
- <ins>: 밑줄
- <sub>: 아래첨자
- <sup>: 위첨자
- <br>: 줄바꾸기
- <pre>: 입력한 형태 그대로 갖다붙이고 싶을 때 사용
- <hr>: 구분선 추가 (닫는태그 없음)
- <q>: 따옴표 인용
- <blockquote>: 인용구
- <ul>: (ㆍ) 으로 리스트 구분
- <ol>: 숫자로 리스트 구분
- <li>: 리스트로 만듬

ㆍ시맨틱 태그
- header: 문서 젤 위에서 전체나 섹션의 헤더
- nav: 내비케이션(로그인 버튼, 마이페이지 등 각종 페이지로 이동 가능한 탭들)
- asied: 사이드에 위치한 공간, 메인과 관련성이 적은 컨텐츠
- section: 컨텐츠의 그룹을 표현
- article: 문서나 사이트 안에서 독립적으로 구분되는 영역
- footer: 문서 젤 밑에서 전체나 섹션의 푸터

ㆍ속성
- <a href="https://google.com"/>: a태그에 속성을 지정
- id, class, style은 특정 태그 뿐만아니라 global로 속성 지정 가능

ㆍ참조
# : 아이디 참조 (#id명 - 전체에서 딱 하나만 가능)
. : 클래스 참조, 현재 폴더 (.class명)
ㆍ<style>: 인라인, 아이디, 클래스, 태그 순으로 수식 우선순위 - 뒤에 적힌게 우선순위
  -<style>
    h1{
        color: palevioletred;
    }
</style>
ㆍimg: ./로 현재 폴더 이미지 불러올 수 있음


telegram---------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍtoken: 784700304:AAFl1zcLZDv4JRWjaTl-mAzReT8fJl8kMuA
ㆍuser ID: 718060199
ㆍ기능: https://core.telegram.org/bots/api#sendmessage - available methods - ...
ㆍmaking requests: https://api.telegram.org/bot784700304:AAFl1zcLZDv4JRWjaTl-mAzReT8fJl8kMuA/METHOD_NAME




```