# Python 함수 정리



ㆍdef 함수명(input):

- 함수 정의
- ()안에 *args를 넣어 가변인자를 함수로 받을 수 있음
- input='ssafy'으로 기본값을 지정할 수 있음 (input이 두개일 경우 기본값 지정한 것은 가장 뒤에 배치!!)
- (*args)일 경우 가변인자를 input으로 받음 

ㆍlist()
- ()안의 값을 리스트로 만들어줌
- list[숫자(:숫자2)]는 숫자 번째(부터 숫자2까지)의 값 (숫자는 0부터 시작)

ㆍrange(시작,끝,간격)
- ()안의 값을 시작값부터 끝값까지 간격만큼의 데이터 형성
- range(8,-1,-1): 8부터 -1전까지(0까지) 역순으로 출력

ㆍlen()
- ()안의 값의 길이를 구함
- 값일 경우 문자길이, 리스트일 경우 리스트 값 갯수

ㆍdict(딕셔너리)
- dict.items()는 key,value값, .keys()는 key값, .values()는 value값
- dict['key']는 key에 해당하는 value값
- key값은 dictionary안에서 유일해야함

ㆍ'!'.join()
- ()를 '!'으로 구분함
- 문자열, 리스트 등 이터러블 가능(int 값은 안됨!)

ㆍ.replace(a,b,2)
- a를 b로 앞에서부터 2개 바꿈

ㆍmap(함수,input())
- input을 내장함수, def 함수값에 넣음
- ex) map(int,[1,2,3]): input을 모두 int 형태로 받음

ㆍint()
- 숫자형 정수

ㆍfloat()
- 숫자형 실수

ㆍstr()
- 문자형
- 문자열 "5.2"를 int로 바꾸려면 int(float("5.2"))

ㆍ복소수형(complex)
- 3-4j일 경우 complex.real은 실수부 3, complex.imag는 허수부 -4

ㆍbool()
- 불리언 타입으로 0, 0.0, (), [], {}, '', None은 False 그 외엔 True로 나타남

ㆍprint('''
	''')

- 여러줄 문장 출력할 때
- print(-a)로 부호변환 가능

ㆍprint(f'{변수1},{변수2}')
- print('{},{}'.format(변수1,변수2))과 동일
- {}내에서 계산도 가능 ex) {a*2+2}

ㆍprint(...[::-1])
- 리스트나 문자열을 역순으로 출력!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

ㆍ.count()
- ()안의 값을 카운트 **()의 찾을 값이 있을때만 사용
- list의 데이터 수를 카운트할 땐 a+=1 for문으로 카운트하기!
	-for i in range(list.count(target)):	list.remove(target)으로 원하는값 모두 삭제 가능

ㆍdivmode(n,m)
- (몫(//), 나머지(%))로 결과값 나옴

ㆍset(리스트)
- ()의 리스트 값 중 중복값 제거
- 중복값만 찾을 경우. set([x for x in a if a.count(x)>1])

ㆍ.split("구분기준",몇등분)
- 다수 input 넣는 방식
  x,y=input("두 수를 입력").split("",1)
  print(int(x)+int(y)) #두 수의 합

  -> a=list(set(map(int,input().split())))

ㆍdatetime.datetime.now()
- 현재 날짜와 시간을 나타내줌
- print에서 %y, %m, %d, %a로 년,월,일,요일을 따로 표현 가능

ㆍ리스트.sort()
- 원본 list를 변형시키고, 오름차순

ㆍ리스트.reverse()
- 반대로 뒤집는다. 정렬시키는 것x

ㆍrandom.choice()
- import random: 함수 코드를 불러옴(모듈)
- a = random.choice(): ()안의 값을 랜덤으로 추출

ㆍrandom.sample(..., n)
- (...)안의 데이터를 random으로 n개 추출 

ㆍ.append()
- 데이터에 ()값 추가

ㆍ.extend()
- 두 list를 합침, list에 list데이터 추가

ㆍ.update(*others)
- 여러가지 값을 순차적으로 추가
- 겹치는 값은 pass

ㆍ.insert(위치,문자)
- 정해진 위치에 '문자'를 추가
- .insert(len(list)-1,''): list 마지막 앞자리에 ''추가

ㆍdict.update({key:value})
- 딕셔너리에 데이터 추가

ㆍenumerate(list)
- list의 value값을 index와 함께 표기
- for idx,val in enumerate(arr)

ㆍdict[n]=m
- 딕셔너리에 값추가
- dict={} 딕셔너리 설정해주기
- enumeratate(list)에서 활용 가능

ㆍ.remove()
- ()안의 값을 왼쪽에서부터 찾아서 제거, 없으면 Error

ㆍ.pop()
- ()안의 위치에 있는 값을 제거, 값이 없으면 젤 뒤에거 삭제
- dict경우, .pop(key,default)로 딕셔너리 값 제거 key값이 없을경우 default값 반환
- b=a.pop()처럼 변수에 제거된 데이터를 저장할 수 있음

ㆍ.discard()
- ()를 삭제하고 삭제할 데이터가 없어도 에러없음

ㆍ.index()
- ()안의 값을 찾아 위치를 알려줌, 없으면 Error

ㆍdict.get(key,default)
- key값의 value를 반환, 만약 key가 없을 경우 default값 반환

ㆍzip(복수iterables) #리스트, 스트링 다 가능
- index가 같은것 끼리 모아서 튜플의 형식으로 반환 [('',''),('',''),('','')]
- dict(zip()) 또는 {x,y for x,y in zip()} 으로 딕셔너리 형태에 넣을 수 있음
- 길이가 다를 땐 짧은거에 맞춰서 앞에서 부터 입력

ㆍfilter(함수,input)
-  input의 값이 함수에서 참인 값만 반환


히히히히히히히