실행: python manage.py runserver $IP:$PORT

mkdir mysite  (mysite 폴더 만들기)
cd mysite  (mysite 폴더 들어가기)
pyenv virtualenv 3.6.7 first-venv  (가상환경 설정, first대신 다른 가상환경 이름 설정 가능)
pyenv local first-venv  (가상환경 활성화, first 대신 입력한 가상환경 이름 적용)

pip install django==2.1.8 (장고 설치)
django-admin startproject (intro) .    -( ()프로젝트 생성, .은 현재 폴더에 생성)
django폴더 > (intro)폴더 > (intro)폴더 > settings > 28번째 줄 ALLOWED_HOSTS에 'playground-gvg4991.c9users.io' 주소 붙여넣기

python manage.py startapp (pages)   -( (앱이름)을 실행 생성하여 실행), apps.py: app의 정보를 가지고 있음
settings에서 107 (ko-kr), 109 (Asia/Seoul), 33마지막에 ((pages).apps.(Pages)Config) 추가
urls.py에서 from (pages) import views 추가

class Save(models.Model):	모델스 설정
	title = models.CharField(max_length=100)

	content = models.TextField()

	birthday = models.DateFirld()
	age = models.IntengerField()
	def __str__(self):
        
		return self.title 

python manage.py makemigrations	<-모델에 있는 클래스를 읽어 들임 (작성 내용을 바꿀때마다 새로해줘야됨)
python manage.py migrate	<-실제 데이터베이스에 적용을 함

admin.py -> from .models import Save -> admin.site.register(Save)		관리자 페이지 설정
python manage.py createsuperuser	계정생성



------------------------------------------------------------------------------------------------------------------------
REST의 구성
-자원(Resource) : URI
-행위(Verb) : HTTP Method
-표현(Representations)

REST API 디자인 가이드
1) URI는 정보의 자원을 표현해야 한다.
2) 자원에 대한 행위는 HTTP Method(GET,POST,PUT,DELETE)로 표현한다.
ex) GET /movies/show/1 (x)
     GET / movies/1 (o)
ex) GET /movies/create (x) - GET Method는 자원 생성에 부적합
     POST /movies (o)
ex) GET /movies/2/update (x) - GET 부적합
     PUT /movies/2 (o)
ex) GET /movies/2/edit - 수정 페이지 보여줌
     POST /movies/2/edit - 수정 작업을 수행함



------------------------------------------------------------------------------------------------------------------------
image 업로드
$ pip install pillow
create.py에 <form action="" method='post' enctype="multipart/form-data">
$ pip install pilkit django-imagekit

settings에 추가

#Media

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR,'media') #미디어폴더에서 사진 가지고오기

models.py에
from imagekit.models import ProcessedImageField

from imagekit.processors import ResizeToFill


class Post(models.Model):

    content = models.TextField()

    image = ProcessedImageField(

        upload_to = 'posts/imags', #저장위치

        processors = [ResizeToFill(600,600)], #처리할 작업 목록

        format='JPEG', #저장 포맷

        options={'quality':90}, #옵션
        )

list.html에   
{% if post.image %}
  
<img src="{{ post.image.url }}" class="card-img-top" alt="{{ post.image }}">
  
{% endif %}
  

메인urls.py
from django.conf.urls.static import static

from django.conf import settings


urlpatterns = [
    path('admin/', admin.site.urls),
    path('posts/', include('posts.urls')),
]


urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)



