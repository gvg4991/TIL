# quick sort

data1 = [11, 45, 23, 81, 28, 34]
data2 = [11, 45, 22, 81, 23, 34, 99, 22, 17, 8]
data3 = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0]


def partition(data, f, t):
    p = data[f]
    i = f
    j = f+1
    while j <= t:
        if data[j] <= p:
            i += 1
            data[i], data[j] = data[j], data[i]
        j += 1
    data[f], data[i] = data[i], data[f]
    return i

def quicksort(data, f, t):
    if f >= t:
        return
    m = partition(data, f, t)
    quicksort(data, f, m-1)
    quicksort(data, m+1, t)


quicksort(data1, 0, len(data1) - 1)
print(data1)
quicksort(data2, 0, len(data2) - 1)
print(data2)
quicksort(data3, 0, len(data3) - 1)
print(data3)

# 트리 순회

import math
n = 3
inorder = [1, 2, 3]
postorder = [1, 3, 2]


def preorder(data, level):
    for i in range(len(data)):
        if (i+1) % 2 == 0:
            level = int(math.log(i + level, 2))
            print(data[i], data[i-1], data[i+1])
    while level < len(data) // 2:
        preorder(data, level + 1)

preorder(inorder, 0)