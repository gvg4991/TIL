import sys
sys.stdin = open("input.txt", "r")

V,E = map(int, input().split())
Tree =[[0] *5 for _ in range(V+1)]

Data = list(map(int, input().split()))

for i in range(V):
    Tree[i][3]=Tree[i][4]=-1
Tree[1][4] = 0



def preorder_traverse(T):
    if T:
        print("%d" % T, end=' ')
        preorder_traverse(Tree[T][0])
        preorder_traverse(Tree[T][1])

def inorder_traverse(T):
    if T:
        inorder_traverse(Tree[T][0])
        print("%d" % T, end=' ')
        inorder_traverse(Tree[T][1])

def postorder_traverse(T):
    if T:
        postorder_traverse(Tree[T][0])
        postorder_traverse(Tree[T][1])
        print("%d" % T, end=' ')

def level_order():
    for level in range(5):
        for i in range(V+1):
            if Tree[i][4]==level: print(i, end=' ')
        print()


for i in range(E):
    parent, child = Data[i*2:i*2+2]
    if Tree[parent][0]==0:
        Tree[parent][0] = child  
        Tree[parent][2] += 1
        Tree[child][3] = parent  # 부모
        Tree[child][4] = Tree[parent][4] + 1
    else :
        Tree[parent][1] = child  # 오른쪽 자식
        Tree[parent][2] += 1
        Tree[child][3] = parent  # 부모
        Tree[child][4] = Tree[parent][4] + 1

preorder_traverse(1)
print()
inorder_traverse(1)
print()
postorder_traverse(1)
print()
level_order()