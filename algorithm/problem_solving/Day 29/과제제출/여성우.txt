1. 연습문제4
N = int(input())
V = 6
graph = [[0x7fffffff] * V for _ in range(V)]
for i in range(V):
    graph[i][i] = 0
tag = ['a', 'b', 'c', 'd', 'e', 'f']
allT = [0, 1, 2, 3, 4, 5]
for i in range(N):
    S, E, w = input().split()
    s = tag.index(S)
    e = tag.index(E)
    w = int(w)
    graph[s][e] = w
for now in range(V):
    dist = graph[now]
    way = [''] * V
    for i in range(V):
        if graph[now][i] > 0 and graph[now][i] < 0x7fffffff:
            way[i] = tag[now] + tag[i]
    T = allT[:]
    del T[now]
    while T:
        mindist = 0x7fffffff
        for i in range(len(T)):
            if dist[T[i]] < mindist:
                t = i
                mindist = dist[T[i]]
        v = T.pop(t)
        for i in T:
            if dist[v] + graph[v][i] < dist[i]:
                way[i] = way[v] + tag[i]
                dist[i] = dist[v] + graph[v][i]
    print(tag[now])
    print(dist)
    print(way)

2. 웜 바이러스(서로소)
def findset(x):
    while p[x] != x:
        x = p[x]
    return x


def union(x, y):
    x = findset(x)
    y = findset(y)
    if x == y:
        return
    if x > y:
        x, y = y, x
    p[y] = x
    c[x] += c[y]


N = int(input())
E = int(input())
p = [_ for _ in range(N+1)]
c = [1] * (N + 1)
for i in range(E):
    a, b = map(int, input().split())
    union(a, b)
print(c[1]-1)

3. 웜 바이러스(플로이드)
N = int(input())
E = int(input())
graph = [[0] * (N + 1) for _ in range(N+1)]
for i in range(E):
    a, b = map(int, input().split())
    graph[a][b] = graph[b][a] = 1
allm = [_ for _ in range(1, N+1)]
for i in range(1, N+1):
    m = allm[:]
    del m[m.index(i)]
    for j in m:
        for k in m:
            if j != k:
                graph[j][k] = graph[j][k] | (graph[j][i] & graph[i][k])
print(graph[1].count(1))