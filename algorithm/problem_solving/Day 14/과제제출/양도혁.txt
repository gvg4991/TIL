# ladder 2
def issafe(x,y,visited) :
    return x >= 0 and x < 100 and y >= 0 and y < 100 and data[y][x] == 1 and not visited[y][x]
# 반복
def search(endx):
    global px,m
    visited = [[0]*100 for i in range(100)]
    endy = 99
    dis = 0
    while endy > 0 :
        visited[endy][endx] = 1
        for i in range(3) :
            if issafe(endx+dx[i],endy+dy[i],visited):
                endx += dx[i]
                endy += dy[i]
                dis+=1
                break
    print(dis)
    if m > dis :
        m = dis
        px = endx
for tc in range(10) :
    m = 100*100*100
    px = -1
    data = []
    dx = [1,-1,0]
    dy = [0,0,-1]
    n = int(input())
    for i in range(100) :
        data.append(list(map(int, input().split())))
    endx = 0
    endy = 99
    for i in range(100) :
        if data[99][i] == 1 :
            endx = i
            search(endx)
    print('#%d %d'%((tc+1),px))



#2 어디
def chkcnt(l,n):
    b = 0
    c = 0
    for i in l:
        if i == 1:
            b += 1
        else:
            if b == n :
                c += 1
            b = 0
    if b == n :
        c += 1
    return c
for i in range(int(input())) :
    cnt = 0
    a,b = list(map(int,input().split()))
    m = []
    k = []
    for t in range(a):
        k.append([])
    for j in range(a) :
        m.append(list(map(int,input().split())))
        if m[j].count(1) >= b :
            cnt += chkcnt(m[j],b)
        for t in range(a) :
            k[t].append( m[j][t] )
    for j in k:
        if j.count(1) >= b:
            cnt += chkcnt(j,b)
    print('#%d %d'%((i+1),cnt))

#3 오셀로
def issafe(x,y,z) :
    return x >= 0 and x < n and y >= 0 and y < n and p[y][x] != z and p[y][x] > 0
def ispossible(tx,ty,dx,dy,z) :
    tx += dx
    ty += dy
    k = 1 if z==2 else 2
    while issafe(tx,ty,z) :
        tx += dx
        ty += dy
    return issafe(tx,ty,k)

dx = [0,1,1,1,0,-1,-1,-1]
dy = [-1,-1,0,1,1,1,0,-1]
for tc in range(int(input())) :
    n,m = map(int,input().split())
    p = [[0]*n for i in range(n)]
    p[n//2-1][n//2-1] = 2
    p[n//2-1][n//2] = 1
    p[n//2][n//2-1] = 1
    p[n//2][n//2] = 2
    for i in range(m) :
        y,x,z=map(int,input().split())
        y-=1
        x-=1
        p[y][x] = z
        for j in range(8) :
            tx = x
            ty = y
            if ispossible(tx,ty,dx[j],dy[j],z) :
                while issafe(tx+dx[j],ty+dy[j],z) :
                    tx += dx[j]
                    ty += dy[j]
                    p[ty][tx] = 2 if z == 2 else 1
    b = w = 0
    for i in p :
        b+= i.count(1)
        w+= i.count(2)
    print('#%d'%(tc+1),b,w)

#4 의석이
for tc in range(int(input())) :
    Data = []
    max_len = 0
    for i in range(5):
        Data.append(input())
        if max_len < len(Data[i]) :
            max_len = len(Data[i])
    cnt = 0
    print('#%d '%(tc+1),end='')
    while cnt <= max_len :
        for i in Data :
            if len(i) > cnt :
                print(i[cnt],end='')
        cnt+=1
    print()

#5 파리퇴치
for a in range(int(input())) :
    t = list(map(int,input().split()))
    m = []
    top = 0
    for j in range(t[0]) :
        m.append(list(map(int,input().split())))
    for i in range(t[0]-t[1]+1) :
        for j in range(t[0]-t[1]+ 1):
            s = 0
            for k in range(t[1]) :
                for p in range(t[1]):
                    s += m[j+k][i+p]
            if top < s :
                top = s
    print('#{} {}'.format((a+1),top))
