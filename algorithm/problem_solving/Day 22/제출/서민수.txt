1. 비트 연습문제 1
data = list(map(int, input()))
res = 0
for i in range(len(data)):
    if (i+1)%7 == 0 and i:
        print(res)
        res = 0
    res = res*2 + int(data[i])

print(res)

2. 비트 연습문제 2
Data = '01D06079861D79F99F'
Data = list(Data)

for i in range(len(Data)):
    if '0' <= Data[i] <= '9':
        Data[i] = int(Data[i])
    elif 'A' <= Data[i] <= 'F':
        Data[i] = ord(Data[i])-ord('A')+10

bin_Data = [0]*len(Data)*4
for now in range(len(Data)):
    for j in range(3, -1, -1):
        if Data[now] & (1<<j):
            bin_Data[4*now + 3-j] = 1
        else: bin_Data[4*now + 3-j] = 0

res = []
dec = 0
for idx in range(len(bin_Data)):
    if (idx+1)%7 == 0:
        res.append(dec)
        dec = 0
    dec = dec*2 + bin_Data[idx]
# if (idx+i)%7 != 0:
#     res.append(dec)
print(res)

3. 비트연습문제3
data = '0269FAC9A0'
data = list(data)
bin_data = [0]*4*len(data)
for i in range(len(data)):
    data[i] = int(data[i], 16)

    for j in range(3, -1, -1):
        if data[i] & (1 << j):
            bin_data[4 * i + 3 - j] = '1'
        else:
            bin_data[4 * i + 3 - j] = '0'
data = ''.join(bin_data)
pw = {0: '001101',
      1: '010011',
      2: '111011',
      3: '110001',
      4: '100011',
      5: '110111',
      6: '001011',
      7: '111101',
      8: '011001',
      9: '101111',
      }
print(data)
now = -1
while now < len(data) -5:
    now += 1
    for idx in range(10):
        if data[now:now+6] == pw[idx]:
            print(idx)
            now+=5
            break

4. 단순2진암호코드

def verification(data):
    code = 0
    for i in range(7):
        if i&1: code += data[i]
        else: code += data[i]*3
    code += data[7]
    if code%10 == 0: return True
    else: return False

def GetSome():
    for y in range(N):
        for x in range(M-1, -1, -1):
            if Data[y][x] == 1:
                now = x
                data = [0]*8
                idx = 7
                while now - 6 >= 0 and\
                    pw_code[Data[y][now-6]][Data[y][now-5]][Data[y][now-4]][Data[y][now-3]][Data[y][now-2]][Data[y][now-1]][Data[y][now]] != -1:
                    data[idx] = pw_code[Data[y][now-6]][Data[y][now-5]][Data[y][now-4]][Data[y][now-3]][Data[y][now-2]][Data[y][now-1]][Data[y][now]]
                    idx -= 1
                    now -= 7
                if verification(data):
                    return sum(data)
                else: return 0


for tc in range(1, int(input())+1):
    N, M = map(int, input().split())
    Data = [list(map(int, input())) for _ in range(N)]

    pw_code = [[[[[[[-1]*2 for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(2)] for _ in range(2)]
    pw_code[0][0][0][1][1][0][1] = 0
    pw_code[0][0][1][1][0][0][1] = 1
    pw_code[0][0][1][0][0][1][1] = 2
    pw_code[0][1][1][1][1][0][1] = 3
    pw_code[0][1][0][0][0][1][1] = 4
    pw_code[0][1][1][0][0][0][1] = 5
    pw_code[0][1][0][1][1][1][1] = 6
    pw_code[0][1][1][1][0][1][1] = 7
    pw_code[0][1][1][0][1][1][1] = 8
    pw_code[0][0][0][1][0][1][1] = 9


    print('#{} {}'.format(tc, GetSome()))

5. 스도쿠
for tc in range(1, int(input())+1):
    Data = [list(map(int, input().split())) for _ in range(9)]
    #print(Data)

    result = 1
    num = 0
    for y in range(9):
        for x in range(9):
           num += Data[y][x]
        if num != 45: result = 0
        num = 0
    for x in range(9):
        for y in range(9):
            num += Data[y][x]
        if num != 45: result = 0
        num = 0
    for y in range(0,9,3):
        for x in range(0,9,3):
            num += sum(Data[y][x:x+3])
            num += sum(Data[y+1][x:x + 3])
            num += sum(Data[y + 2][x:x + 3])
            if num != 45: result = 0
            num = 0
    print("#{} {}".format(tc, result))