#1 7진수 변환
package test1;

public class e_7jin {
	public static void get(int n, int k)
	{
		if(n < k)
		{
			System.out.print(n);
			return;
		}
		get(n/k,k);
		System.out.print(n%k);
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int item = 123;
		get(item,7);

	}

}

#2 정식이
#include <iostream>

using namespace std;

char itemB[41];
int nB;

long long check(long long res)
{
	int tm[41];
	int k = 0;
	long long t = res;
	while (t > 0)
	{
		tm[k] = t%3;
		k++;
		t /= 3;
	}
	if (k != nB)
		return 0;
	int cc = 0;
	for (int i = 0; i < nB; i++)
	{
		k -= 1;
		if (int(itemB[i]) - 48 == tm[k]) continue;
		else
		{
			if (cc == 0)
			{
				cc++;
				continue;
			}
			else
			{
				return 0;
			}
		}
		
	}
	/*for (int i = k - 1; i > -1; i--)
	{
		printf("%d", tm[i]);
	}*/
	return res;
}
int main()
{
	int test_case;
	int T;
	char itemA[41];
	char tempA[41];
	//char itemB[41];
	itemA[0] = '\0';
	itemB[0] = '\0';
	tempA[0] = '\0';
	cin >> T;
	for (test_case = 1; test_case <= T; ++test_case)
	{
		scanf("%s", itemA);
		scanf("%s", itemB);

		int nA = 0;
		nB = 0;
		while (itemA[nA] != '\0')
			nA++;
		while (itemB[nB] != '\0')
			nB++;
		long long temp = 0;
		for (int i = 0; i < nA; i++)
		{
			temp = 0;
			tempA[0] = '\0';
			for (int j = 0; j < nA; j++)
			{
				if (i != j)
				{
					if (itemA[j] == '1')
					{
						temp += 1 << (nA - 1 - j);
					}
				}
				else
				{
					if (itemA[j] == '0')
					{
						temp += 1 << (nA - 1 - j);
					}
				}
			}
			long long chk = check(temp);
			if (chk)
			{
				printf("#%d %lld\n",test_case,chk);
				break;
			}
		}
		//printf("%s %s", itemA, itemB);

	}
	return 0;
}

#3 암호코드
asc = [[0, 0, 0, 0],  # 0
	   [0, 0, 0, 1],  # 1
	   [0, 0, 1, 0],  # 2
	   [0, 0, 1, 1],  # 3
	   [0, 1, 0, 0],  # 4
	   [0, 1, 0, 1],  # 5
	   [0, 1, 1, 0],  # 6
	   [0, 1, 1, 1],  # 7
	   [1, 0, 0, 0],  # 8
	   [1, 0, 0, 1],  # 9
	   [1, 0, 1, 0],  # A
	   [1, 0, 1, 1],  # B
	   [1, 1, 0, 0],  # C
	   [1, 1, 0, 1],  # D
	   [1, 1, 1, 0],  # E
	   [1, 1, 1, 1]]  # F

scode = [[[0 for _ in range(5)] for _ in range(5)] for _ in range(5)]
scode[2][1][1] = 0
scode[2][2][1] = 1
scode[1][2][2] = 2
scode[4][1][1] = 3
scode[1][3][2] = 4
scode[2][3][1] = 5
scode[1][1][4] = 6
scode[3][1][2] = 7
scode[2][1][3] = 8
scode[1][1][2] = 9


def solve():
    rst = 0
    for i in range(N):
        j = M * 4 - 1
        while j > 0:
            if arr[i][j] == 1 and arr[i - 1][j] == 0:
                code = [0 for _ in range(8)]
                for k in range(7, -1, -1):
                    x = y = z = 0
                    while arr[i][j] == 1:  # 1의 개수
                        z += 1
                        j -= 1
                    while arr[i][j] == 0:  # 0의 개수
                        y += 1
                        j -= 1
                    while arr[i][j] == 1:  # 1의 개수
                        x += 1
                        j -= 1
                    while arr[i][j] == 0:  # 0의 개수
                        j -= 1

                    d = min(x, y, z)
                    x //= d
                    y //= d
                    z //= d

                    code[k] = scode[x][y][z]

                t = (code[0] + code[2] + code[4] + code[6]) * 3 + code[1] + code[3] + code[5] + code[7]
                if t % 10 == 0:
                    rst += code[0] + code[2] + code[4] + code[6] + code[1] + code[3] + code[5] + code[7]
                j += 1
            j -= 1
    return rst


T = int(input())
for tc in range(T):
    N, M = map(int, input().split())
    arr = [[0 for _ in range(M * 4)] for _ in range(N)]
    for i in range(N):
        temp = input()
        for j in range(M):
            t = temp[j]
            if t <= '9':
                t = ord(t) - ord('0')
            else:
                t = ord(t) - ord('A') + 10
            for k in range(4):
                arr[i][j * 4 + k] = asc[t][k]

    ans = solve()
    print("#{} {}".format(tc + 1, ans))