#### 7 진수
a=123
b=[]


while a >=7:

    b.append(a%7)
    a=a//7
    if a<7:
        b.append(a)
print(b[::-1])
b.reverse()
print(b)


### 16진수
import sys
sys.stdin=open("input.txt","r")

num=int(input())
for j in range(num):
    num1,data=input().split()
    num1=int(num1)


    r_result=[]
    for i in range(len(data)):
        if data[i]=='1':
            i='0001'
        elif data[i]=='0':
            i='0000'
        elif ord(data[i])>=65 and ord(data[i])<=70:
            if data[i]=='A':
                i='1010'
            elif data[i]=='B':
                i='1011'
            elif data[i] == 'C':
                i='1100'
            elif data[i] == 'D':
                i='1101'
            elif data[i] == 'E':
                i='1110'
            elif data[i] == 'F':
                i='1111'
        elif int(data[i])>1:
            temp=0
            result=[]
            t_int=int(data[i])
            while t_int>1:

                temp=int(t_int)%2
                t_int=t_int//2
                result.append(str(temp))
                if t_int<2:
                    result.append(str(t_int))
                    if len(result)<4:
                        for x in range(4-len(result)):
                            result.append('0')
                    result.reverse()
                    result="".join(result)


            r_result.append(result)
            continue
        r_result.append(i)
    r_result="".join(r_result)
    print('#{} {}'.format(j+1, r_result))



## 이진수2

import sys
sys.stdin=open("input.txt","r")

num=int(input())
for j in range(num):
    data=float(input())
    # data=str(data)
    #
    # data=data[2:]
    # print(data,data[1])
    result=[]
    flag=0
    a=data*2
    b=0
    while True:
        if a==0.0:
            break
        if len(result)>12:
            flag=1
            print("#{} overflow".format(j+1))
            break
        if a>=1:
            b=str(a)
            result.append(b[0])
            a=a-1
        elif a<1:
            result.append('0')

        a=a*2
    if flag==0:
        print('#{} {}'.format(j+1,"".join(result)))


## 정식이 은행

import sys
sys.stdin=open("input.txt","r")


def jin2(a):
    global aa
    for i in range(len(a)):
        if a[i]=='1':
            temp2.append(2**(len(a)-i-1))
    aa=sum(temp2)
    return aa
def jin3(a):
    global bb
    for i in range(len(a)):
        if int(a[i])>=1:
            temp3.append((3**(len(a)-i-1)*int(a[i])))
    bb=sum(temp3)
    return bb

num=int(input())
for j in range(num):
    data2=input()
    data3=input()
    temp3=[]
    a2=[]
    a3=[]

    for i in range(len(data2)):
        if data2[i]=='1':
            temp2=[]
            aa=0
            temp = list(data2)
            temp[i]='0'
            temp="".join(temp)
            jin2(temp)
            a2.append(aa)
        else:
            temp2=[]
            temp=list(data2)
            temp[i]='1'
            temp="".join(temp)
            jin2(temp)
            a2.append(aa)

    for i in range(len(data3)):
        for z in range(3):
            x=0
            temp3=[]
            bb=0
            if data3[i] != chr(48+z): # '2' #i=0
                temp = list(data3)
                temp[i] = chr(48 + z)
                temp = "".join(temp)
                jin3(temp)
                a3.append(bb)
    for i in range(len(a2)):
        for x in range(len(a3)):
            if a2[i]==a3[x]:
                print("#{} {}".format(j+1, a2[i]))
                break



## 암호코드스캔(수정중)

import sys, copy
sys.stdin=open("input.txt","r")

#
def find(i): #56
    global r_data,a

    temp=[]
    while True:
        temp.append(r_data[i])
        i=i+1
        if r_data[i]=='0' and (len(temp)*4%56)==0:
            break


    a=len(temp)

    return a
target=['0001101','0011001','0010011','0111101','0100011','0110001','0101111','0111011','0110111','0001011']
targetx=[[3,2,1,1],[2,2,2,1],[2,1,2,2],[1,4,1,1],[1,1,3,2],[1,2,3,1],[1,1,1,4],[1,3,1,2],[1,2,1,3],[3,1,1,2]]
#len(re)의 길이가 54 * x라면
#타겟의 범위를 늘리자
num=int(input())
for j in range(num):
    s,g=list(map(int,input().split()))
    data=[]
    r_data=''
    for i in range(s):
        r_data += input()
    visited=[0]*s*g
    ready=0
    print(type(target[0][0]*3),target[0][1]*3)

    for b in range(len(r_data)):

        q = []
        re = []
        a = 0
        r_result = []
        o = 0
        p = 0
        c = []
        tempcount = 0
        if r_data[b] != '0' and not visited[b]:
            find(b)
            while r_data[b] !='0':
                for x in range(a):
                    visited[b+x]=True
                q.append(r_data[b:b+a])
                b= b+g
                if r_data[b]=='0':
                    break
            data=q[0]
# 16진수 2진수변환
            for i in range(a):
                if data[i]=='1':
                    i='0001'
                elif data[i]=='0':
                    i='0000'
                elif ord(data[i])>=65 and ord(data[i])<=70:
                    if data[i]=='A':
                        i='1010'
                    elif data[i]=='B':
                        i='1011'
                    elif data[i] == 'C':
                        i='1100'
                    elif data[i] == 'D':
                        i='1101'
                    elif data[i] == 'E':
                        i='1110'
                    elif data[i] == 'F':
                        i='1111'
                elif int(data[i])>1:
                    temp=0
                    result=[]
                    t_int=int(data[i])
                    while t_int>1:
                        temp=int(t_int)%2
                        t_int=t_int//2
                        result.append(str(temp))
                        if t_int<2:
                            result.append(str(t_int))
                            if len(result)<4:
                                for x in range(4-len(result)):
                                    result.append('0')

                            result.reverse()
                            result="".join(result)
                    r_result.append(result)

                    continue
                r_result.append(i)

            r_result="".join(r_result)
            r_result=list(r_result)
            re = copy.deepcopy(r_result)
            re.reverse()

            r_result="".join(r_result)
            print(r_result)

            for i in range(len(r_result)-1,-1,-1):

                if r_result[i]=='0':
                    re.append('0')
                    tempcount+=1

                elif r_result[i] !='0':
                    break
            re=re[tempcount:]

            re.reverse()
            re="".join(re)


            v = []

            n = len(re) // 56  # n값은 len(re)/56
            z = 0
            targetn = []
            d = 0
            e = 1

            f = 1
            while z != 10:
                v += ('0' * targetx[z][0] * n)
                v += ('1' * targetx[z][1] * n)
                v += ('0' * targetx[z][2] * n)
                v += ('1' * targetx[z][3] * n)
                z += 1


            targetn.append("".join(v[d:7 * n]))
            k = 7 * n
            while True:
                targetn.append("".join(v[k:k + 7 * n]))  # 뒷 2배씩
                k = k + 7 * n
                if k > len(v)-1:
                    break
            print(targetn,"targetn")
            print(target,"target")
            print(re,"re")


            k=7*n
            while True:
                if len(re)==56:
                    c.append(re[o:o+7])
                    o+=7
                    if o >= len(re):
                        break
                elif len(re)>56:
                    c.append("".join(re[o:7*n]))
                    while True:
                        c.append(re[k:k+7*n])
                        k= k+7*n
                        if k > len(re)-1:
                            break
            print(c,"c")

            #
            r_result=[]
            for i in range(len(c)):
                if c[i] in target:
                    r_result.append(target.index(c[i]))


            result=0
            for i in range(1):
                if ((r_result[0]+r_result[2]+r_result[4]+r_result[6])*3+(r_result[1]+r_result[3]+r_result[5])+r_result[7])%10==0 and ((r_result[0]+r_result[2]+r_result[4]+r_result[6])*3+(r_result[1]+r_result[3]+r_result[5])+r_result[7])!=0:
                    result=sum(r_result)
            ready += result
            print("#{} {}".format(j+1,ready))