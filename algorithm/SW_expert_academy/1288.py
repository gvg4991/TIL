# 민석이는 불면증에 걸렸다. 그래서 잠이 안 올 때의 민간요법 중 하나인 양 세기를 하려고 한다.
# 민석이는 1번 양부터 순서대로 세는 것이 재미없을 것 같아서 N의 배수 번호인 양을 세기로 하였다.
# 즉, 첫 번째에는 N번 양을 세고, 두 번째에는 2N번 양, … , k번째에는 kN번 양을 센다.
# 이렇게 숫자를 세던 민석이에게 잠은 더 오지 않고 다음과 같은 궁금증이 생겼다.
# 이전에 셌던 번호들의 각 자리수에서 0에서 9까지의 모든 숫자를 보는 것은 최소 몇 번 양을 센 시점일까?
# 예를 들어 N = 1295이라고 하자.
# 첫 번째로 N = 1295번 양을 센다. 현재 본 숫자는 1, 2, 5, 9이다.
# 두 번째로 2N = 2590번 양을 센다. 현재 본 숫자는 0, 2, 5, 9이다.
# 현재까지 본 숫자는 0, 1, 2, 5, 9이다.
# 세 번째로 3N = 3885번 양을 센다. 현재 본 숫자는 3, 5, 8이다.
# 현재까지 본 숫자는 0, 1, 2, 3, 5, 8, 9이다.
# 네 번째로 4N = 5180번 양을 센다. 현재 본 숫자는 0, 1, 5, 8이다.
# 현재까지 본 숫자는 0, 1, 2, 3, 5, 8, 9이다.
# 다섯 번째로 5N = 6475번 양을 센다. 현재 본 숫자는 4, 5, 6, 7이다.
# 현재까지 본 숫자는 0, 1, 2, 3, 4, 5, 6, 7, 8, 9이다.
# 5N번 양을 세면 0에서 9까지 모든 숫자를 보게 되므로 민석이는 양 세기를 멈춘다.
# [입력]
# 첫 번째 줄에 테스트 케이스의 수 T가 주어진다.
# 각 테스트 케이스의 첫 번째 줄에는 N (1 ≤ N ≤ 106)이 주어진다.
# [출력]
# 각 테스트 케이스마다 ‘#x’(x는 테스트케이스 번호를 의미하며 1부터 시작한다)를 출력하고,
# 최소 몇 번 양을 세었을 때 이전에 봤던 숫자들의 자릿수에서 0에서 9까지의 모든 숫자를 보게 되는지 출력한다.
#  ( 민석이는 xN번 양을 세고 있다. ) 

a=int(input())
for b in range(a):
    d=input()
    r=list(range(10)) #[0,1,2,...,9]
    i=[]
    c=0
    while sorted(r)!=sorted(i):
        g=(int(c)+1)*int(d)
        N=list(map(int,str(g)))
        for n in N:
            if not n in i:
                i.append(n)
        c+=1
    print(f'#{b+1} {g}')






#     # 기본 제공코드는 임의 수정해도 관계 없습니다. 단, 입출력 포맷 주의
# # 아래 표준 입출력 예제 필요시 참고하세요.

# # 표준 입력 예제
# '''
# a = int(input())                        정수형 변수 1개 입력 받는 예제
# b, c = map(int, input().split())        정수형 변수 2개 입력 받는 예제 
# d = float(input())                      실수형 변수 1개 입력 받는 예제
# e, f, g = map(float, input().split())   실수형 변수 3개 입력 받는 예제
# h = input()                             문자열 변수 1개 입력 받는 예제
# '''

# # 표준 출력 예제
# '''
# a, b = 6, 3
# c, d, e = 1.0, 2.5, 3.4
# f = "ABC"
# print(a)                                정수형 변수 1개 출력하는 예제
# print(b, end = " ")                     줄바꿈 하지 않고 정수형 변수와 공백을 출력하는 예제
# print(c, d, e)                          실수형 변수 3개 출력하는 예제
# print(f)                                문자열 1개 출력하는 예제
# '''

# import sys


# '''
#       아래의 구문은 input.txt 를 read only 형식으로 연 후,
#       앞으로 표준 입력(키보드) 대신 input.txt 파일로부터 읽어오겠다는 의미의 코드입니다.
#       여러분이 작성한 코드를 테스트 할 때, 편의를 위해서 input.txt에 입력을 저장한 후,
#       아래 구문을 이용하면 이후 입력을 수행할 때 표준 입력 대신 파일로부터 입력을 받아올 수 있습니다.

#       따라서 테스트를 수행할 때에는 아래 주석을 지우고 이 구문을 사용하셔도 좋습니다.
#       아래 구문을 사용하기 위해서는 import sys가 필요합니다.

#       단, 채점을 위해 코드를 제출하실 때에는 반드시 아래 구문을 지우거나 주석 처리 하셔야 합니다.
# '''
# #sys.stdin = open("input.txt", "r")

# T = int(input())
# # 여러개의 테스트 케이스가 주어지므로, 각각을 처리합니다.
# for test_case in range(1, T + 1):
#     # ///////////////////////////////////////////////////////////////////////////////////
#     '''

#         이 부분에 여러분의 알고리즘 구현이 들어갑니다.

#     '''
#     # ///////////////////////////////////////////////////////////////////////////////////
