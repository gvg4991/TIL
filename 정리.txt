https://sarc.io/index.php/development/855-python-list

'변수'
ㆍ변수 = 값
ㆍ리스트 = [값, ...]
ㆍ딕셔너리 = {"키":벨류, ...}

'조건'
ㆍ들여쓰기 중요!
ㆍ부등호 다음에 띄어쓰기
ㆍ조건문 ()없어도 됨
ㆍ콜론(:) 필수
ㆍ순서 역방향 상관없음 (ex 10 >= x, x <= 10)
if 조건: ...
elif 조건: ...
else: ...

'반복'
while문보다 for문 권장
[0:3] 0이상 3미만 ex)0,1,2

'함수'
ㆍimport... 함수가 포함된 코드를 불러옴
 - from flask -> 이후에 flask.Flask로 사용
 - from flask import Flask -> 이후에 Flask로 사용
ㆍrandom.choice
  함수 코드를 불러옴(모듈)- import random
  점심 메뉴 리스트- menu=[ ]
  함수 결과 값을 저장- choice = random.choice(menu)
  출력- print(choice)
ㆍrandom.sample(..., n)
  n개의 데이터를 랜덤으로 뽑음
ㆍ리스트.sort()- 오름차순
ㆍ리스트.reverse()- 반대로

python----------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍwebbrowser.open('http://www.')
ㆍrequest
ㆍ표준 입력으로 물품 가격 여러 개가 문자열 한 줄로 입력되고, 각 가격은 ;(세미콜론)으로 구분되어 있습니다. 입력된 가격을 높은 가격순으로 출력하는 프로그램
#input : 10;2;3
# .split() 이용
prices = prices.split(';') #['10','2','3']사전 순으로 나옴

#비어있는 리스트 생성
int_price=[]

# 1.반복을 통한 item들 int() 이용
for i in prices: #i='10'
    int_price.append(int(i)) #i=10, i=2, i=3 -> int_price=[10,2,3]
# 2.map함수 쓰기
#int_price = list(map(int,prices)) #[int('10'),int('2'),int('3')] -> [10,2,3]

# .sort() 정렬
int_price.sort() #[2,3,10]
# .reverse() 뒤집기
int_price.reverse() #[10,3,2]
# 한줄로 만들기
#1) sorted_price=reversed(sorted(int_price))
#2) int_price.sort(reverse=True)

# 출력
for i in int_price:
    print(i)
    #10
    #3
    #2

visual studio code----------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍ줄바꾸기 shift+enter
ㆍcls: 터미널 지우기
ㆍprint('지금 원/달러 환율은 {1} 입니다.{0}'.format(USD,a))
  -{}안에 숫자없으면 그냥 순서대로
ㆍctrl+c로 터미널 정리!!

GIT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍclear: 정리
ㆍcd: 폴더입장
ㆍinit: 현재 위치(폴더) 관리하기
ㆍconfig --global: user설정 가능 (name, email)
ㆍ
html------------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍhtml:5
ㆍbody 영역을 직접 눈으로 보게됨
 -h숫자: 헤드 텍스트 입력
 -p: 본문영역 텍스트 입력
 -<br>: 강제 줄바꿈
 -ul: (ㆍ) 으로 리스트 구분, ol: 숫자로 리스트 구분
 -li: 리스트 만듬
ㆍ참조
# : 아이디 참조 (#id명 - 전체에서 딱 하나만 가능)
. : 클래스 참조, 현재 폴더 (.class명)
ㆍ주석: ctrl + /
ㆍ<style>: 인라인, 아이디, 클래스, 태그 순으로 수식 우선순위 - 뒤에 적힌게 우선순위
  -<style>
    h1{
        color: palevioletred;
    }
</style>
ㆍimg: ./로 현재 폴더 이미지 불러올 수 있음

github-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

'gvg4991.github.io'
ㆍ설정 (동일한 단어 박스뜨면 ctrl+d를 누르면 동시에 수정 가능 / alt누르고 클릭해도 커서 하나 더 생김)
66line: class="mb-0">minho (이름 변경)
67line: email 주소 변경
ㆍ변경 사항 적용
 - cd
 - cd MINHO
 - git status
 - git add . (내용 추가 및 변경 후)
 - git commit -m "change index.html(아무거나 가능)"
 - git push (변경사항 연동)

flask-------------------------------------------------------------------------------------------------------------------------------------------------------------------

ㆍ실행: FLASK_APP=hello.py flask run
ㆍ추가 창(.../어쩌고)
@app.route("/ssafy")
def ssafy():
    return "This is SSAFY:)"
ㆍ추가창에 인풋데이터 참고<int / string : 변수이름>
@app.route("/cube.<int:num>")
def cube(num):
    cube=num**3 # == num*num*num
    return str(cube)
    return f'{num}의 세제곱은 {cube}입니다.'
